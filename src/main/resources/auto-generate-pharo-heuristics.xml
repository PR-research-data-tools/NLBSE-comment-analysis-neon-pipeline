<?xml version="1.0" encoding="UTF-8"?>
<heuristics>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>Subclass needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.dependent="subclass"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prepc_for/dobj</type>
        <text>Provides child.</text>
        <conditions>
            <condition>dobj.governor="provide"</condition>
            <condition>dobj.governor=prepc_for.governor</condition>
            <condition>prepc_for.dependent="add"</condition>
            <condition>prepc_for.governor=dobj.governor</condition>
            <condition>dobj.dependent="child"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass/xcomp</type>
        <text>[auxiliary] be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/nsubj/dobj</type>
        <text>[something] [auxiliary] use [something].</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] can perform [something].</text>
        <conditions>
            <condition>nsubj.governor="perform"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To provide [something].</text>
        <conditions>
            <condition>aux.governor="provide"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] defines [something].</text>
        <conditions>
            <condition>nsubj.governor="define"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/neg</type>
        <text>[auxiliary] not use.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] wants.</text>
        <conditions>
            <condition>nsubj.governor="want"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Method returns [something].</text>
        <conditions>
            <condition>nsubj.governor="return"</condition>
            <condition>nsubj.dependent="method"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Should use.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="should"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To use.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Filters [something].</text>
        <conditions>
            <condition>dobj.governor="filter"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] subclasses.</text>
        <conditions>
            <condition>nsubj.governor="subclass"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="datum"</condition>
        </conditions>
        <sentence_class>SubclassesExplanation</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] supports [something].</text>
        <conditions>
            <condition>nsubj.governor="use support"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Supports [something].</text>
        <conditions>
            <condition>dobj.governor="use support"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_of</type>
        <text>I contains example.</text>
        <conditions>
            <condition>nsubj.governor="contain"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="example"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Contains [something].</text>
        <conditions>
            <condition>dobj.governor="contain"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Constructs [something].</text>
        <conditions>
            <condition>dobj.governor="build construct"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] works.</text>
        <conditions>
            <condition>nsubj.governor="support use work"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Defines [something].</text>
        <conditions>
            <condition>dobj.governor="define"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] has.</text>
        <conditions>
            <condition>nsubj.governor="convert have"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>I uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="i"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>I allows [something].</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="class"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass/prep_in</type>
        <text>Can be found.</text>
        <conditions>
            <condition>nsubjpass.governor="find"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_in.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>xcomp.governor="apply use"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] support.</text>
        <conditions>
            <condition>aux.governor="use support"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>That allows [something].</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="that"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] stores [something].</text>
        <conditions>
            <condition>nsubj.governor="store"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass/agent</type>
        <text>Is sent.</text>
        <conditions>
            <condition>auxpass.governor="send"</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=agent.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I creates [something].</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To create [something].</text>
        <conditions>
            <condition>aux.governor="create"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>I can be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.dependent="paint i"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I holds [something].</text>
        <conditions>
            <condition>nsubj.governor="maintain hold"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Allows [something].</text>
        <conditions>
            <condition>dobj.governor="let allow"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Specifies [something].</text>
        <conditions>
            <condition>dobj.governor="specify"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] does [something].</text>
        <conditions>
            <condition>nsubj.governor="make do"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To build [something].</text>
        <conditions>
            <condition>aux.governor="build"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] includes [something].</text>
        <conditions>
            <condition>nsubj.governor="include"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>I defines.</text>
        <conditions>
            <condition>nsubj.governor="define"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>I knows.</text>
        <conditions>
            <condition>nsubj.governor="know"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To add [something].</text>
        <conditions>
            <condition>aux.governor="add"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To specify [something].</text>
        <conditions>
            <condition>aux.governor="specify"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I builds [something].</text>
        <conditions>
            <condition>nsubj.governor="build"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>I allows.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod/aux</type>
        <text>I to is class create.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
            <condition>vmod.dependent="create"</condition>
            <condition>vmod.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] supplies.</text>
        <conditions>
            <condition>nsubj.governor="provide supply"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass/prep_for</type>
        <text>Paint can be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.dependent="i paint"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod/dobj</type>
        <text>I is resource [something] build.</text>
        <conditions>
            <condition>nsubj.governor="resource"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
            <condition>vmod.dependent="build"</condition>
            <condition>vmod.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp/dobj</type>
        <text>[something] allows [something] to specify.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=xcomp.governor</condition>
            <condition>xcomp.dependent="specify"</condition>
            <condition>xcomp.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>ccomp.governor="use"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] buttons.</text>
        <conditions>
            <condition>nsubj.governor="add button"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is specified.</text>
        <conditions>
            <condition>nsubjpass.governor="specify"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] have.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Adds [something].</text>
        <conditions>
            <condition>dobj.governor="add"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Accesses [something].</text>
        <conditions>
            <condition>dobj.governor="access"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/vmod</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>I indicates.</text>
        <conditions>
            <condition>nsubj.governor="indicate"</condition>
            <condition>nsubj.dependent="i"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_of</type>
        <text>I plays role.</text>
        <conditions>
            <condition>nsubj.governor="play"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="role"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="part"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I stores [something].</text>
        <conditions>
            <condition>nsubj.governor="store"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/agent</type>
        <text>I is sent.</text>
        <conditions>
            <condition>nsubjpass.governor="send"</condition>
            <condition>nsubjpass.dependent="i"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=agent.governor</condition>
            <condition>agent.dependent="look"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass/nsubjpass</type>
        <text>Is sent.</text>
        <conditions>
            <condition>auxpass.governor="send"</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=nsubjpass.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Creates.</text>
        <conditions>
            <condition>ccomp.governor="create"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="list"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I holds [something].</text>
        <conditions>
            <condition>nsubj.governor="maintain hold"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="number"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_of</type>
        <text>I defines apus.</text>
        <conditions>
            <condition>nsubj.governor="define"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="apus"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
            <condition>prep_of.dependent="canvas paint"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_as/nsubjpass/aux/auxpass</type>
        <text>Can [verb].</text>
        <conditions>
            <condition>prep_as.governor="use"</condition>
            <condition>prep_as.governor=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Value is resolved.</text>
        <conditions>
            <condition>nsubjpass.governor="resolve"</condition>
            <condition>nsubjpass.dependent="value"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] adds [something].</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] constructs [something].</text>
        <conditions>
            <condition>nsubj.governor="build construct"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/prep_to</type>
        <text>[auxiliary] add [something].</text>
        <conditions>
            <condition>aux.governor="add"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] transformations.</text>
        <conditions>
            <condition>nsubj.governor="change transformation"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Holds [something].</text>
        <conditions>
            <condition>dobj.governor="keep maintain hold"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>nsubjpass/auxpass</type>
        <text>Is placed.</text>
        <conditions>
            <condition>nsubjpass.governor="set place"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="process calculation"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>auxpass</type>
        <text>Is set.</text>
        <conditions>
            <condition>auxpass.governor="place set"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="class group collection"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>Can be specified.</text>
        <conditions>
            <condition>nsubjpass.governor="specify"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>[something] allows user.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="user"</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass/nsubjpass</type>
        <text>Is finished.</text>
        <conditions>
            <condition>auxpass.governor="complete finish"</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=nsubjpass.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Displays [something].</text>
        <conditions>
            <condition>dobj.governor="display"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To get position.</text>
        <conditions>
            <condition>aux.governor="get"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="position"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Computes [something].</text>
        <conditions>
            <condition>dobj.governor="calculate compute"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Implements [something].</text>
        <conditions>
            <condition>dobj.governor="traverse implement"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I supports paint.</text>
        <conditions>
            <condition>nsubj.governor="support"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="paint"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/neg</type>
        <text>Can not specify.</text>
        <conditions>
            <condition>aux.governor="specify"</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/prep_for</type>
        <text>[auxiliary] specify [something].</text>
        <conditions>
            <condition>aux.governor="specify"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prepc_for</type>
        <text>[something] provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=prepc_for.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Event is fired.</text>
        <conditions>
            <condition>nsubjpass.governor="fire"</condition>
            <condition>nsubjpass.dependent="event"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>acomp</type>
        <text>S sure.</text>
        <conditions>
            <condition>acomp.governor="make"</condition>
            <condition>acomp.dependent="sure"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_of</type>
        <text>Plays role.</text>
        <conditions>
            <condition>dobj.governor="play"</condition>
            <condition>dobj.dependent="role"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_to</type>
        <text>Is sent.</text>
        <conditions>
            <condition>nsubjpass.governor="send"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_into</type>
        <text>I splits [something].</text>
        <conditions>
            <condition>nsubj.governor="split"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_into.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_with</type>
        <text>[something] creates [something].</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_with.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>I implements.</text>
        <conditions>
            <condition>nsubj.governor="tool implement"</condition>
            <condition>nsubj.dependent="i"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I creates element.</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="element"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Chooses [something].</text>
        <conditions>
            <condition>dobj.governor="choose"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>prep_at/nsubjpass/auxpass</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>prep_at.governor="place set"</condition>
            <condition>prep_at.governor=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is imported.</text>
        <conditions>
            <condition>nsubjpass.governor="traverse import"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_into</type>
        <text>Splits area.</text>
        <conditions>
            <condition>dobj.governor="split"</condition>
            <condition>dobj.dependent="area"</condition>
            <condition>dobj.governor=prep_into.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_on</type>
        <text>[something] creates [something].</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_on.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with/nsubjpass/auxpass</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>prep_with.governor="use"</condition>
            <condition>prep_with.governor=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for/nsubjpass/auxpass</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>prep_for.governor="use"</condition>
            <condition>prep_for.governor=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] includes [something].</text>
        <conditions>
            <condition>dobj.governor="include"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To filter element.</text>
        <conditions>
            <condition>aux.governor="filter"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="element"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] can choose [something].</text>
        <conditions>
            <condition>nsubj.governor="choose"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>You specify directory.</text>
        <conditions>
            <condition>nsubj.governor="specify"</condition>
            <condition>nsubj.dependent="you"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="directory"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>[something] allows you.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="you"</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Tests [something].</text>
        <conditions>
            <condition>dobj.governor="test"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>Element allows [something].</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="element"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Element allows author.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="element"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="author"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] builds [something].</text>
        <conditions>
            <condition>nsubj.governor="construct build"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="set position"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Holds [something].</text>
        <conditions>
            <condition>dobj.governor="maintain keep hold"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="property"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="type"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_for</type>
        <text>Specifies [something].</text>
        <conditions>
            <condition>dobj.governor="specify"</condition>
            <condition>dobj.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] starts.</text>
        <conditions>
            <condition>nsubj.governor="start"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] sends.</text>
        <conditions>
            <condition>nsubj.governor="send"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] [auxiliary] construct [something].</text>
        <conditions>
            <condition>nsubj.governor="build construct"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To manage [something].</text>
        <conditions>
            <condition>aux.governor="manage"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="size"</condition>
            <condition>prep_of.dependent="element"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] defines property.</text>
        <conditions>
            <condition>dobj.governor="define"</condition>
            <condition>dobj.dependent="property"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To embed [something].</text>
        <conditions>
            <condition>aux.governor="embed"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass/nsubjpass</type>
        <text>Is traversed.</text>
        <conditions>
            <condition>auxpass.governor="trigger traverse"</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=nsubjpass.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Inserts [something].</text>
        <conditions>
            <condition>dobj.governor="play insert"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="array"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To avoid [something].</text>
        <conditions>
            <condition>aux.governor="avoid"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/nsubj/dobj</type>
        <text>[something] applies [something].</text>
        <conditions>
            <condition>xcomp.governor="use apply"</condition>
            <condition>xcomp.governor=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Updates [something].</text>
        <conditions>
            <condition>dobj.governor="update"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To log [something].</text>
        <conditions>
            <condition>aux.governor="record log"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I makes [something].</text>
        <conditions>
            <condition>nsubj.governor="do make"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I displays [something].</text>
        <conditions>
            <condition>nsubj.governor="display"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] objects.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is made.</text>
        <conditions>
            <condition>nsubjpass.governor="do make"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Creates object.</text>
        <conditions>
            <condition>dobj.governor="create"</condition>
            <condition>dobj.dependent="object"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>That uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="that"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] knows [something].</text>
        <conditions>
            <condition>dobj.governor="know"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I implements [something].</text>
        <conditions>
            <condition>nsubj.governor="implement"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is algorithm.</text>
        <conditions>
            <condition>nsubj.governor="algorithm"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] finds tree.</text>
        <conditions>
            <condition>dobj.governor="find"</condition>
            <condition>dobj.dependent="tree"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>It finds [something].</text>
        <conditions>
            <condition>nsubj.governor="find"</condition>
            <condition>nsubj.dependent="it"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] can detect.</text>
        <conditions>
            <condition>nsubj.governor="detect"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To calculate [something].</text>
        <conditions>
            <condition>aux.governor="compute calculate"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To make [something].</text>
        <conditions>
            <condition>aux.governor="sort make"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] displays information.</text>
        <conditions>
            <condition>nsubj.governor="display"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="information"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To make [something].</text>
        <conditions>
            <condition>aux.governor="do make"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] catches [something].</text>
        <conditions>
            <condition>nsubj.governor="catch"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Makes [something].</text>
        <conditions>
            <condition>dobj.governor="sort make"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Makes [something].</text>
        <conditions>
            <condition>dobj.governor="do make"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="instance case"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="concept abstract abstraction"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] takes [something].</text>
        <conditions>
            <condition>dobj.governor="take"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_on</type>
        <text>[something] depends.</text>
        <conditions>
            <condition>nsubj.governor="depend"</condition>
            <condition>nsubj.governor=prep_on.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="work"</condition>
            <condition>prep_with.dependent="child"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Stores [something].</text>
        <conditions>
            <condition>dobj.governor="store"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To support.</text>
        <conditions>
            <condition>aux.governor="support"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>I exists.</text>
        <conditions>
            <condition>nsubj.governor="exist"</condition>
            <condition>nsubj.dependent="i"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_such_as</type>
        <text/>
        <conditions>
            <condition>prep_such_as.governor="property"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="element"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with/dobj</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="build"</condition>
            <condition>prep_with.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] events.</text>
        <conditions>
            <condition>nsubj.governor="event"</condition>
            <condition>nsubj.governor=cop.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To find.</text>
        <conditions>
            <condition>aux.governor="find"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] transforms [something].</text>
        <conditions>
            <condition>nsubj.governor="transform"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] support [something].</text>
        <conditions>
            <condition>aux.governor="support"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] encapsulates [something].</text>
        <conditions>
            <condition>nsubj.governor="encapsulate"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To take.</text>
        <conditions>
            <condition>aux.governor="take"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is taken.</text>
        <conditions>
            <condition>auxpass.governor="take"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>I models.</text>
        <conditions>
            <condition>nsubj.governor="model"</condition>
            <condition>nsubj.dependent="i"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="piece"</condition>
            <condition>prep_of.dependent="text"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is created.</text>
        <conditions>
            <condition>auxpass.governor="create"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="dependency"</condition>
            <condition>prep_of.dependent="example"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>auxpass</type>
        <text>Is computed.</text>
        <conditions>
            <condition>auxpass.governor="calculate compute"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] executes [something].</text>
        <conditions>
            <condition>nsubj.governor="execute"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Traverses [something].</text>
        <conditions>
            <condition>dobj.governor="reset traverse"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in/aux</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="use"</condition>
            <condition>prep_in.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Visits [something].</text>
        <conditions>
            <condition>dobj.governor="visit"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Filters [something].</text>
        <conditions>
            <condition>dobj.governor="traverse filter"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="dependency"</condition>
            <condition>prep_of.dependent="entity"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] returns [something].</text>
        <conditions>
            <condition>nsubj.governor="return"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Inserts [something].</text>
        <conditions>
            <condition>dobj.governor="return insert"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] include [something].</text>
        <conditions>
            <condition>aux.governor="include"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="way"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for/dobj</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="specify"</condition>
            <condition>prep_for.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] has.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Transforms it.</text>
        <conditions>
            <condition>dobj.governor="transform"</condition>
            <condition>dobj.dependent="it"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>[auxiliary] build [something].</text>
        <conditions>
            <condition>dobj.governor="construct build"</condition>
            <condition>dobj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] gives [something].</text>
        <conditions>
            <condition>nsubj.governor="give"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Image boots.</text>
        <conditions>
            <condition>nsubj.governor="boot"</condition>
            <condition>nsubj.dependent="image"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Imports [something].</text>
        <conditions>
            <condition>dobj.governor="export traverse import"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="abstract view"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] abstractions.</text>
        <conditions>
            <condition>nsubj.governor="attribute construct abstraction"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="position"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] presumes.</text>
        <conditions>
            <condition>nsubj.governor="assume presume"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Captures [something].</text>
        <conditions>
            <condition>dobj.governor="capture"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="subset"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Traverses [something].</text>
        <conditions>
            <condition>dobj.governor="clip traverse"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="element"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>agent</type>
        <text/>
        <conditions>
            <condition>agent.governor="use"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="dictionary"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] change.</text>
        <conditions>
            <condition>aux.governor="alter change"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_about</type>
        <text/>
        <conditions>
            <condition>prep_about.governor="information"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="attach"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="refer"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Makes.</text>
        <conditions>
            <condition>xcomp.governor="make"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="implementation"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="all"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="lay place"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] places.</text>
        <conditions>
            <condition>nsubj.governor="lay place"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sends [something].</text>
        <conditions>
            <condition>dobj.governor="send"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] passes.</text>
        <conditions>
            <condition>nsubj.governor="pass"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] imports.</text>
        <conditions>
            <condition>nsubj.governor="import"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Records [something].</text>
        <conditions>
            <condition>dobj.governor="file record"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] files.</text>
        <conditions>
            <condition>nsubj.governor="file"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="element"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] describes.</text>
        <conditions>
            <condition>nsubj.governor="describe"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Requests [something].</text>
        <conditions>
            <condition>dobj.governor="request"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] learns.</text>
        <conditions>
            <condition>nsubj.governor="learn"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Starts [something].</text>
        <conditions>
            <condition>dobj.governor="start"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Attaches [something].</text>
        <conditions>
            <condition>dobj.governor="attach"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] access.</text>
        <conditions>
            <condition>aux.governor="access"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prepc_of</type>
        <text/>
        <conditions>
            <condition>prepc_of.governor="posibility"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] roots.</text>
        <conditions>
            <condition>nsubj.governor="root"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Forms [something].</text>
        <conditions>
            <condition>dobj.governor="i form"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="configuration"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] requests.</text>
        <conditions>
            <condition>nsubj.governor="request"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] traits.</text>
        <conditions>
            <condition>nsubj.governor="trait"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="text"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="package box"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="object"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Inserts [something].</text>
        <conditions>
            <condition>dobj.governor="print insert"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Matches [something].</text>
        <conditions>
            <condition>dobj.governor="traverse match"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Calls [something].</text>
        <conditions>
            <condition>dobj.governor="traverse call"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Combines [something].</text>
        <conditions>
            <condition>dobj.governor="traverse combine"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Loads [something].</text>
        <conditions>
            <condition>dobj.governor="traverse load"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Blocks [something].</text>
        <conditions>
            <condition>dobj.governor="traverse block"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] refers.</text>
        <conditions>
            <condition>nsubj.governor="refer"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] represent.</text>
        <conditions>
            <condition>aux.governor="represent"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Handles [something].</text>
        <conditions>
            <condition>dobj.governor="handle"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="file"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="abstract view"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] models.</text>
        <conditions>
            <condition>nsubj.governor="framework model"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Tests.</text>
        <conditions>
            <condition>ccomp.governor="test"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Describes [something].</text>
        <conditions>
            <condition>dobj.governor="describe"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Adds.</text>
        <conditions>
            <condition>ccomp.governor="add"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="point element"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="text"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] tests.</text>
        <conditions>
            <condition>nsubj.governor="test"</condition>
        </conditions>
        <sentence_class>Responsibilities</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is class.</text>
        <conditions>
            <condition>nsubj.governor="group collection class"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod</type>
        <text>I is group.</text>
        <conditions>
            <condition>nsubj.governor="class group"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_for</type>
        <text>I is class.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>I is collection.</text>
        <conditions>
            <condition>nsubj.governor="group class collection"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is xxxxxxxxx.</text>
        <conditions>
            <condition>nsubj.governor="xxxxxxxxx"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prepc_for</type>
        <text>[something] is class.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prepc_for.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>[something] is collection.</text>
        <conditions>
            <condition>nsubj.governor="class collection"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>[something] is collection.</text>
        <conditions>
            <condition>nsubj.governor="combination collection"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] represents.</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is element.</text>
        <conditions>
            <condition>nsubj.governor="point element"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="collection group class"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="implementation"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>[something] is part.</text>
        <conditions>
            <condition>nsubj.governor="part"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod/aux</type>
        <text>I to is class create.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
            <condition>vmod.dependent="create"</condition>
            <condition>vmod.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>[something] is collection.</text>
        <conditions>
            <condition>nsubj.governor="set collection"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod/dobj</type>
        <text>I is resource [something] build.</text>
        <conditions>
            <condition>nsubj.governor="resource"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
            <condition>vmod.dependent="build"</condition>
            <condition>vmod.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>I is class.</text>
        <conditions>
            <condition>nsubj.governor="collection class"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
            <condition>prep_of.dependent="element"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>I is class.</text>
        <conditions>
            <condition>nsubj.governor="collection class"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
            <condition>prep_of.dependent="example"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is framework.</text>
        <conditions>
            <condition>nsubj.governor="model framework"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>I is example.</text>
        <conditions>
            <condition>nsubj.governor="example"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_for</type>
        <text>I is superclass.</text>
        <conditions>
            <condition>nsubj.governor="superclass"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] attributes.</text>
        <conditions>
            <condition>nsubj.governor="attribute"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/agent</type>
        <text>I is sent.</text>
        <conditions>
            <condition>nsubjpass.governor="send"</condition>
            <condition>nsubjpass.dependent="i"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=agent.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod</type>
        <text>I is slot.</text>
        <conditions>
            <condition>nsubj.governor="slot"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>I is superclass.</text>
        <conditions>
            <condition>nsubj.governor="superclass"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod/aux/dobj</type>
        <text>To [verb] [something] have.</text>
        <conditions>
            <condition>vmod.governor="class"</condition>
            <condition>vmod.dependent="have"</condition>
            <condition>vmod.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="builder part"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="type kind"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is iterator.</text>
        <conditions>
            <condition>nsubj.governor="iterator"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is transformation.</text>
        <conditions>
            <condition>nsubj.governor="transformation"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is button.</text>
        <conditions>
            <condition>nsubj.governor="loop button"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is type.</text>
        <conditions>
            <condition>nsubj.governor="type"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>[something] is kind.</text>
        <conditions>
            <condition>nsubj.governor="type kind"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is source.</text>
        <conditions>
            <condition>nsubj.governor="source"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="collection combination"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I represents matrix.</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="matrix"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>[something] is implementation.</text>
        <conditions>
            <condition>nsubj.governor="implementation"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>That allows user.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="that"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="user"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp/nsubj</type>
        <text>[something] represents to attribute.</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="attribute"</condition>
            <condition>ccomp.dependent=nsubj.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>I represents line.</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="line"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is model.</text>
        <conditions>
            <condition>nsubj.governor="model"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] can create [something].</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] create [something].</text>
        <conditions>
            <condition>aux.governor="create"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] have [something].</text>
        <conditions>
            <condition>aux.governor="have"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Builds [something].</text>
        <conditions>
            <condition>dobj.governor="build"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is list.</text>
        <conditions>
            <condition>nsubj.governor="list"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>This is class.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.dependent="this"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/prep_of</type>
        <text>[something] is pair.</text>
        <conditions>
            <condition>nsubj.governor="set pair"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=prep_of.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="superclass"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is box.</text>
        <conditions>
            <condition>nsubj.governor="container box"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I filters.</text>
        <conditions>
            <condition>nsubj.governor="filter"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="use"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To get [something].</text>
        <conditions>
            <condition>aux.governor="get"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I visitors.</text>
        <conditions>
            <condition>nsubj.governor="visitor"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is parser.</text>
        <conditions>
            <condition>nsubj.governor="parser"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] represents information.</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="information"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_such_as</type>
        <text/>
        <conditions>
            <condition>prep_such_as.governor="property"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="example"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="element"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="class group"</condition>
            <condition>prep_of.dependent="element point"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>agent/xcomp</type>
        <text/>
        <conditions>
            <condition>agent.governor="use"</condition>
            <condition>agent.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="collection set"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] algorithms.</text>
        <conditions>
            <condition>nsubj.governor="algorithm"</condition>
            <condition>nsubj.governor=cop.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/vmod</type>
        <text>Represents [something].</text>
        <conditions>
            <condition>dobj.governor="represent"</condition>
            <condition>dobj.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Represents property.</text>
        <conditions>
            <condition>dobj.governor="represent"</condition>
            <condition>dobj.dependent="property"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] roots.</text>
        <conditions>
            <condition>nsubj.governor="root"</condition>
            <condition>nsubj.governor=cop.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="list"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>I ms.</text>
        <conditions>
            <condition>nsubj.governor="m"</condition>
            <condition>nsubj.dependent="i"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_to</type>
        <text>[something] refers.</text>
        <conditions>
            <condition>nsubj.governor="refer"</condition>
            <condition>nsubj.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="layout"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="use"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] adds.</text>
        <conditions>
            <condition>nsubj.governor="button add"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] sets.</text>
        <conditions>
            <condition>nsubj.governor="lay set"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Performs [something].</text>
        <conditions>
            <condition>dobj.governor="perform"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="amount"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="contain"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="description"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Combines [something].</text>
        <conditions>
            <condition>dobj.governor="traverse combine"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Bases [something].</text>
        <conditions>
            <condition>dobj.governor="traverse base"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="builder part"</condition>
        </conditions>
        <sentence_class>Intent</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp/nsubj</type>
        <text>[something] objects to object.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="object"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] objects object.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="object"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/agent</type>
        <text>Instance is created.</text>
        <conditions>
            <condition>nsubjpass.governor="create"</condition>
            <condition>nsubjpass.dependent="instance"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=agent.governor</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Glyph lies.</text>
        <conditions>
            <condition>nsubj.governor="lie"</condition>
            <condition>nsubj.dependent="glyph"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] acollections [something].</text>
        <conditions>
            <condition>nsubj.governor="acollection"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="name"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] objects [something].</text>
        <conditions>
            <condition>dobj.governor="object"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] blocks.</text>
        <conditions>
            <condition>nsubj.governor="paint block"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] osmzoomlevels.</text>
        <conditions>
            <condition>nsubj.governor="osmzoomlevel"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Zooms [something].</text>
        <conditions>
            <condition>dobj.governor="zoom"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="level length"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="array"</condition>
        </conditions>
        <sentence_class>Instancevariables</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux/dobj</type>
        <text>To get [something].</text>
        <conditions>
            <condition>dobj.governor="get"</condition>
            <condition>dobj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>neg/nsubj/aux/neg</type>
        <text>[something] [auxiliary] not [verb].</text>
        <conditions>
            <condition>neg.governor="transformation change"</condition>
            <condition>neg.dependent="not"</condition>
            <condition>neg.governor=nsubj.governor</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=neg.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To get [something].</text>
        <conditions>
            <condition>aux.governor="get"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] creates [something].</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>It is niled.</text>
        <conditions>
            <condition>nsubjpass.governor="nil"</condition>
            <condition>nsubjpass.dependent="it"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/neg/xcomp</type>
        <text>[something] do not have.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="do"</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
            <condition>neg.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass/prep_in/prep_with</type>
        <text>Would be used.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="would"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_in.governor</condition>
            <condition>prep_in.dependent="inclusion"</condition>
            <condition>prep_in.dependent=prep_with.governor</condition>
            <condition>prep_with.dependent="caption"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] does.</text>
        <conditions>
            <condition>nsubj.governor="do"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sets [something].</text>
        <conditions>
            <condition>dobj.governor="set"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] uses.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>It may be niled.</text>
        <conditions>
            <condition>nsubjpass.governor="nil"</condition>
            <condition>nsubjpass.dependent="it"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="may"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Has.</text>
        <conditions>
            <condition>xcomp.governor="have"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_of</type>
        <text>[something] defines apus.</text>
        <conditions>
            <condition>nsubj.governor="define"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="apus"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Returns [something].</text>
        <conditions>
            <condition>dobj.governor="return"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To query entity.</text>
        <conditions>
            <condition>aux.governor="query"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="entity"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in/aux</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="use"</condition>
            <condition>prep_in.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="builder part"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/neg</type>
        <text>[something] [auxiliary] not change.</text>
        <conditions>
            <condition>nsubj.governor="transformation change"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is defined.</text>
        <conditions>
            <condition>nsubjpass.governor="define"</condition>
            <condition>nsubjpass.dependent=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is created.</text>
        <conditions>
            <condition>nsubjpass.governor="create"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To create [something].</text>
        <conditions>
            <condition>aux.governor="create"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] create time.</text>
        <conditions>
            <condition>aux.governor="create"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="instance time"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>[something] allows [something].</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] can have.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is set.</text>
        <conditions>
            <condition>nsubjpass.governor="set"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is reached.</text>
        <conditions>
            <condition>nsubjpass.governor="reach"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="size length"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length number"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="instance"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="amount"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>I defines.</text>
        <conditions>
            <condition>nsubj.governor="define"</condition>
            <condition>nsubj.dependent="i"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets [something].</text>
        <conditions>
            <condition>dobj.governor="get"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] defines.</text>
        <conditions>
            <condition>nsubj.governor="define"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to/aux</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="add"</condition>
            <condition>prep_to.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] returns [something].</text>
        <conditions>
            <condition>nsubj.governor="return"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] write [something].</text>
        <conditions>
            <condition>aux.governor="write"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Name has.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.dependent="i name"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="number"</condition>
            <condition>prep_of.dependent="session"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is accessed.</text>
        <conditions>
            <condition>auxpass.governor="access"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length interval"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="edge"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="bound"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] transforms.</text>
        <conditions>
            <condition>nsubj.governor="transform"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] executes.</text>
        <conditions>
            <condition>nsubj.governor="execute"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s.</text>
        <conditions>
            <condition>vmod.governor="text letter"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] define.</text>
        <conditions>
            <condition>aux.governor="define"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Scales [something].</text>
        <conditions>
            <condition>dobj.governor="scale"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] belongs.</text>
        <conditions>
            <condition>nsubj.governor="belong"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="part"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Files [something].</text>
        <conditions>
            <condition>dobj.governor="file"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] expires.</text>
        <conditions>
            <condition>nsubj.governor="expire"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] iftrues.</text>
        <conditions>
            <condition>nsubj.governor="iftrue"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Accesses [something].</text>
        <conditions>
            <condition>dobj.governor="access"</condition>
        </conditions>
        <sentence_class>Keymessages</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>[auxiliary] be configured.</text>
        <conditions>
            <condition>nsubjpass.governor="configure"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] [auxiliary] use [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Paint uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="i paint"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] have.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] configure.</text>
        <conditions>
            <condition>aux.governor="configure"</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Extends [something].</text>
        <conditions>
            <condition>dobj.governor="extend"</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_as</type>
        <text/>
        <conditions>
            <condition>prep_as.governor="define"</condition>
        </conditions>
        <sentence_class>Extensions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] use me.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="me"</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/nsubj/dobj</type>
        <text>[something] should use [something].</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="should"</condition>
            <condition>aux.governor=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/prep_to</type>
        <text>[auxiliary] add [something].</text>
        <conditions>
            <condition>aux.governor="add"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] should use me.</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="should"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="me"</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is suited.</text>
        <conditions>
            <condition>nsubjpass.governor="render suit"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is stored.</text>
        <conditions>
            <condition>nsubjpass.governor="store"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>You need [something].</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.dependent="you"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Takes [something].</text>
        <conditions>
            <condition>dobj.governor="take"</condition>
        </conditions>
        <sentence_class>Recommendations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] defaults [something].</text>
        <conditions>
            <condition>nsubj.governor="use support default"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is done.</text>
        <conditions>
            <condition>nsubjpass.governor="make do"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] tries.</text>
        <conditions>
            <condition>nsubj.governor="attempt use support default work try"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="case instance"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is executed.</text>
        <conditions>
            <condition>auxpass.governor="execute"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] changes.</text>
        <conditions>
            <condition>nsubj.governor="default change"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is applied.</text>
        <conditions>
            <condition>auxpass.governor="use apply"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is named.</text>
        <conditions>
            <condition>nsubjpass.governor="call name"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] changes [something].</text>
        <conditions>
            <condition>nsubj.governor="default change"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass/xcomp</type>
        <text>Can be set.</text>
        <conditions>
            <condition>nsubjpass.governor="set"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/nsubj</type>
        <text>[something] [auxiliary] have [something].</text>
        <conditions>
            <condition>aux.governor="have"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Changes [something].</text>
        <conditions>
            <condition>dobj.governor="change"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_on</type>
        <text>Method is defined.</text>
        <conditions>
            <condition>nsubjpass.governor="define"</condition>
            <condition>nsubjpass.dependent="method"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_on.governor</condition>
            <condition>prep_on.dependent="side"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] calls [something].</text>
        <conditions>
            <condition>nsubj.governor="call"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for/nsubj/dobj</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="provide"</condition>
            <condition>prep_for.dependent="reason"</condition>
            <condition>prep_for.governor=nsubj.governor</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] goes.</text>
        <conditions>
            <condition>nsubj.governor="go"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Space starts process.</text>
        <conditions>
            <condition>nsubj.governor="start"</condition>
            <condition>nsubj.dependent="space"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="process"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj/prep_with</type>
        <text>User [auxiliary] configure [something].</text>
        <conditions>
            <condition>nsubj.governor="configure"</condition>
            <condition>nsubj.dependent="user"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_with.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>Will be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="will"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>Will be evaluated.</text>
        <conditions>
            <condition>nsubjpass.governor="evaluate"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="will"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/aux</type>
        <text>[auxiliary] use.</text>
        <conditions>
            <condition>xcomp.governor="use"</condition>
            <condition>xcomp.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] exists.</text>
        <conditions>
            <condition>nsubj.governor="exist"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is executed.</text>
        <conditions>
            <condition>nsubjpass.governor="execute"</condition>
            <condition>nsubjpass.dependent=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is executed.</text>
        <conditions>
            <condition>nsubjpass.governor="execute"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>This is done.</text>
        <conditions>
            <condition>nsubjpass.governor="do"</condition>
            <condition>nsubjpass.dependent="this"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] changes.</text>
        <conditions>
            <condition>nsubj.governor="change"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Layout is performed.</text>
        <conditions>
            <condition>nsubjpass.governor="perform"</condition>
            <condition>nsubjpass.dependent="layout"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/xcomp</type>
        <text>To apply.</text>
        <conditions>
            <condition>aux.governor="apply"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=xcomp.dependent</condition>
            <condition>xcomp.governor="need"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux/neg</type>
        <text>[auxiliary] not use [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.governor=aux.governor</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>neg</type>
        <text/>
        <conditions>
            <condition>neg.governor="use"</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/xcomp/nsubj</type>
        <text>[something] [auxiliary] be going.</text>
        <conditions>
            <condition>aux.governor="go"</condition>
            <condition>aux.dependent="be"</condition>
            <condition>aux.governor=xcomp.governor</condition>
            <condition>xcomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Performs layout.</text>
        <conditions>
            <condition>dobj.governor="perform"</condition>
            <condition>dobj.dependent="layout"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="bound"</condition>
            <condition>prep_of.dependent="element"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Measures [something].</text>
        <conditions>
            <condition>dobj.governor="measure"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] configure [something].</text>
        <conditions>
            <condition>aux.governor="configure"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod/dobj</type>
        <text>[verb]s example define.</text>
        <conditions>
            <condition>vmod.governor="method"</condition>
            <condition>vmod.dependent="define"</condition>
            <condition>vmod.dependent=dobj.governor</condition>
            <condition>dobj.dependent="example"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] has i.</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.dependent="name i"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>Tilfold ses algorithm.</text>
        <conditions>
            <condition>nsubj.governor="algorithm"</condition>
            <condition>nsubj.dependent="tilfold"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="s"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/xcomp</type>
        <text>Is meant.</text>
        <conditions>
            <condition>nsubjpass.governor="mean"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/prep_for</type>
        <text>[auxiliary] provide [something].</text>
        <conditions>
            <condition>aux.governor="provide"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To do.</text>
        <conditions>
            <condition>aux.governor="make do"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To have [something].</text>
        <conditions>
            <condition>aux.governor="have"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] sets [something].</text>
        <conditions>
            <condition>dobj.governor="set"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Defaults [something].</text>
        <conditions>
            <condition>dobj.governor="use default"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Takes [something].</text>
        <conditions>
            <condition>dobj.governor="take"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] consists.</text>
        <conditions>
            <condition>nsubj.governor="consist"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is allowed.</text>
        <conditions>
            <condition>nsubjpass.governor="allow"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] supposes.</text>
        <conditions>
            <condition>nsubj.governor="suppose"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="subclass"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prepc_in</type>
        <text/>
        <conditions>
            <condition>prepc_in.governor="consist"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass</type>
        <text>[auxiliary] be executed.</text>
        <conditions>
            <condition>aux.governor="execute"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To use [something].</text>
        <conditions>
            <condition>aux.governor="apply use"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass</type>
        <text>[auxiliary] be layouted.</text>
        <conditions>
            <condition>aux.governor="layout"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Element has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.dependent="element"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/xcomp</type>
        <text>To avoid.</text>
        <conditions>
            <condition>aux.governor="avoid"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Executes [something].</text>
        <conditions>
            <condition>dobj.governor="execute"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To measure [something].</text>
        <conditions>
            <condition>aux.governor="measure"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj/aux</type>
        <text>[something] [auxiliary] have [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] has value.</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.dependent="value"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] finds [something].</text>
        <conditions>
            <condition>nsubj.governor="find"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is object.</text>
        <conditions>
            <condition>nsubj.governor="object"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is implemented.</text>
        <conditions>
            <condition>nsubjpass.governor="implement"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/cop</type>
        <text>[auxiliary] is object.</text>
        <conditions>
            <condition>aux.governor="object"</condition>
            <condition>aux.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To generate [something].</text>
        <conditions>
            <condition>aux.governor="generate"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is done.</text>
        <conditions>
            <condition>nsubjpass.governor="make do"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Gets tile.</text>
        <conditions>
            <condition>dobj.governor="get"</condition>
            <condition>dobj.dependent="tile"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/xcomp</type>
        <text>Overrides method.</text>
        <conditions>
            <condition>dobj.governor="override"</condition>
            <condition>dobj.dependent="method"</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] means.</text>
        <conditions>
            <condition>nsubj.governor="default means"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="position set"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Changes [something].</text>
        <conditions>
            <condition>dobj.governor="fire default change"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/dobj</type>
        <text>Allows [something].</text>
        <conditions>
            <condition>xcomp.governor="allow"</condition>
            <condition>xcomp.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Places.</text>
        <conditions>
            <condition>xcomp.governor="set place"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Means.</text>
        <conditions>
            <condition>xcomp.governor="mean"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Layout supports.</text>
        <conditions>
            <condition>nsubj.governor="support"</condition>
            <condition>nsubj.dependent="layout"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Has length.</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.dependent="mode length"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] specify.</text>
        <conditions>
            <condition>nsubj.governor="specify"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sends [something].</text>
        <conditions>
            <condition>dobj.governor="send"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Wants.</text>
        <conditions>
            <condition>xcomp.governor="want"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for/dobj</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="provide"</condition>
            <condition>prep_for.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_during</type>
        <text/>
        <conditions>
            <condition>prep_during.governor="execute"</condition>
            <condition>prep_during.dependent="frame"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s contain.</text>
        <conditions>
            <condition>vmod.governor="element"</condition>
            <condition>vmod.dependent="contain"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Requests layout.</text>
        <conditions>
            <condition>dobj.governor="request"</condition>
            <condition>dobj.dependent="layout"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Needs.</text>
        <conditions>
            <condition>xcomp.governor="need"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Applies layout.</text>
        <conditions>
            <condition>dobj.governor="apply"</condition>
            <condition>dobj.dependent="layout"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="position"</condition>
            <condition>prep_of.dependent="element"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] measures.</text>
        <conditions>
            <condition>nsubj.governor="step measure"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is measured.</text>
        <conditions>
            <condition>auxpass.governor="measure"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] measures [something].</text>
        <conditions>
            <condition>nsubj.governor="measure"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="extent"</condition>
            <condition>prep_of.dependent="element"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Changes extent.</text>
        <conditions>
            <condition>dobj.governor="change"</condition>
            <condition>dobj.dependent="extent"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] calculates [something].</text>
        <conditions>
            <condition>dobj.governor="compute calculate"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="size length"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] defaults [something].</text>
        <conditions>
            <condition>dobj.governor="shy default"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>cop</type>
        <text>Is.</text>
        <conditions>
            <condition>cop.governor="object"</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To initialize.</text>
        <conditions>
            <condition>aux.governor="initialize"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] initialize [something].</text>
        <conditions>
            <condition>aux.governor="initialize"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] defaults.</text>
        <conditions>
            <condition>nsubj.governor="attempt default"</condition>
            <condition>nsubj.governor=cop.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To care.</text>
        <conditions>
            <condition>aux.governor="work care"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="shape length"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] includes [something].</text>
        <conditions>
            <condition>nsubj.governor="include"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To minimize.</text>
        <conditions>
            <condition>aux.governor="minimize"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Will call.</text>
        <conditions>
            <condition>aux.governor="call"</condition>
            <condition>aux.dependent="will"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] dons.</text>
        <conditions>
            <condition>nsubj.governor="don"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] zooms [something].</text>
        <conditions>
            <condition>nsubj.governor="zoom"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] https [something].</text>
        <conditions>
            <condition>nsubj.governor="http"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To display.</text>
        <conditions>
            <condition>aux.governor="display"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length width"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Makes [something].</text>
        <conditions>
            <condition>dobj.governor="like make"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length number"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Makes.</text>
        <conditions>
            <condition>ccomp.governor="do make"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] defaults.</text>
        <conditions>
            <condition>nsubj.governor="callback default"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Specifies [something].</text>
        <conditions>
            <condition>dobj.governor="specify"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] perform.</text>
        <conditions>
            <condition>aux.governor="perform"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Produces [something].</text>
        <conditions>
            <condition>dobj.governor="produce"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Is [something].</text>
        <conditions>
            <condition>dobj.governor="n be"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Means.</text>
        <conditions>
            <condition>ccomp.governor="mean"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="child minor"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="mode length"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] takes.</text>
        <conditions>
            <condition>nsubj.governor="take"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="property"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="layout"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="change"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] makes.</text>
        <conditions>
            <condition>nsubj.governor="like make"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>neg</type>
        <text/>
        <conditions>
            <condition>neg.governor="matter"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="execute"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] find.</text>
        <conditions>
            <condition>aux.governor="find"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="find"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Follows [something].</text>
        <conditions>
            <condition>dobj.governor="follow"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass</type>
        <text>Is measured.</text>
        <conditions>
            <condition>nsubjpass.governor="measure"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] defaults.</text>
        <conditions>
            <condition>nsubj.governor="shy default"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] stores.</text>
        <conditions>
            <condition>nsubj.governor="store"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="subject contents"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_as</type>
        <text/>
        <conditions>
            <condition>prep_as.governor="name"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length number"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length leave"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="case instance"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_from</type>
        <text/>
        <conditions>
            <condition>prep_from.governor="step measure"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="default pass"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Makes.</text>
        <conditions>
            <condition>ccomp.governor="do make"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Shows [something].</text>
        <conditions>
            <condition>dobj.governor="show"</condition>
        </conditions>
        <sentence_class>Keyimplementationpoints</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Applies [something].</text>
        <conditions>
            <condition>dobj.governor="use apply"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj</type>
        <text>[something] does to inform and self.</text>
        <conditions>
            <condition>ccomp.governor="do"</condition>
            <condition>ccomp.dependent="inform"</condition>
            <condition>ccomp.dependent=nsubj.governor</condition>
            <condition>nsubj.dependent="self"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] does.</text>
        <conditions>
            <condition>nsubj.governor="do"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/nsubj</type>
        <text>[something] will return.</text>
        <conditions>
            <condition>aux.governor="return"</condition>
            <condition>aux.dependent="will"</condition>
            <condition>aux.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp/nsubj/dobj</type>
        <text>[something] does to inform and self [verb]s [something].</text>
        <conditions>
            <condition>nsubj.governor="do"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="inform"</condition>
            <condition>ccomp.dependent=nsubj.governor</condition>
            <condition>nsubj.dependent="self"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Shapes [something].</text>
        <conditions>
            <condition>dobj.governor="shape"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] adds.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length width height"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To give [something].</text>
        <conditions>
            <condition>aux.governor="give"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>To create [something].</text>
        <conditions>
            <condition>dobj.governor="create"</condition>
            <condition>dobj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>Enclosure is case.</text>
        <conditions>
            <condition>nsubj.governor="case"</condition>
            <condition>nsubj.dependent="enclosure"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Points [something].</text>
        <conditions>
            <condition>dobj.governor="inform point"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] iftrues [something].</text>
        <conditions>
            <condition>nsubj.governor="iftrue"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="size length"</condition>
            <condition>prep_of.dependent="arrow"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is case.</text>
        <conditions>
            <condition>nsubj.governor="instance case"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>We want.</text>
        <conditions>
            <condition>nsubj.governor="want"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We have [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>You have [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.dependent="you"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] insert.</text>
        <conditions>
            <condition>aux.governor="return insert"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] points [something].</text>
        <conditions>
            <condition>nsubj.governor="inform point"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod/dobj</type>
        <text>[verb]s previewheight previewexpand.</text>
        <conditions>
            <condition>vmod.governor="gtlivefor"</condition>
            <condition>vmod.dependent="previewexpand"</condition>
            <condition>vmod.dependent=dobj.governor</condition>
            <condition>dobj.dependent="previewheight"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Template templates.</text>
        <conditions>
            <condition>nsubj.governor="template"</condition>
            <condition>nsubj.dependent="template"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp/nsubj/dobj</type>
        <text>V adds to add and e1 [verb]s [something].</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.dependent="v"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
            <condition>ccomp.dependent="add"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="e1"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp/aux/dobj</type>
        <text>[something] to be [something] to create.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
            <condition>xcomp.dependent="create"</condition>
            <condition>xcomp.dependent=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/agent/aux/auxpass</type>
        <text>Enclosure [auxiliary] be computed.</text>
        <conditions>
            <condition>nsubjpass.governor="compute"</condition>
            <condition>nsubjpass.dependent="enclosure"</condition>
            <condition>nsubjpass.governor=agent.governor</condition>
            <condition>agent.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] rtviews.</text>
        <conditions>
            <condition>nsubj.governor="rtview"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Can use.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] have [something].</text>
        <conditions>
            <condition>aux.governor="have"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] previewexpands previewheight.</text>
        <conditions>
            <condition>dobj.governor="previewexpand"</condition>
            <condition>dobj.dependent="previewheight"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is computed.</text>
        <conditions>
            <condition>nsubjpass.governor="compute"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/prep_with</type>
        <text>To create button.</text>
        <conditions>
            <condition>aux.governor="create"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="button"</condition>
            <condition>dobj.governor=prep_with.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Adds circle.</text>
        <conditions>
            <condition>dobj.governor="add"</condition>
            <condition>dobj.dependent="circle"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/prepc_by</type>
        <text>[something] can do.</text>
        <conditions>
            <condition>nsubj.governor="do"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=prepc_by.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_into</type>
        <text>Is taken.</text>
        <conditions>
            <condition>nsubjpass.governor="take"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_into.governor</condition>
            <condition>prep_into.dependent="account"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] spartacanvas.</text>
        <conditions>
            <condition>nsubj.governor="spartacanva"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_of</type>
        <text>Contains instance.</text>
        <conditions>
            <condition>dobj.governor="contain"</condition>
            <condition>dobj.dependent="instance"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
            <condition>prep_of.dependent="class"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/nsubj</type>
        <text>[something] will return [something].</text>
        <conditions>
            <condition>aux.governor="return"</condition>
            <condition>aux.dependent="will"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To define [something].</text>
        <conditions>
            <condition>aux.governor="define"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] can add transformation.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent="transformation"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Views [something].</text>
        <conditions>
            <condition>dobj.governor="view"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/iobj/dobj</type>
        <text>To give to [something] [something].</text>
        <conditions>
            <condition>aux.governor="give"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=iobj.governor</condition>
            <condition>iobj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] can use [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Does.</text>
        <conditions>
            <condition>ccomp.governor="do"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="length"</condition>
            <condition>prep_of.dependent="arrow"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj/aux</type>
        <text>[something] [auxiliary] move [something] and we.</text>
        <conditions>
            <condition>dobj.governor="move"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Can do.</text>
        <conditions>
            <condition>aux.governor="do"</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>We can move.</text>
        <conditions>
            <condition>nsubj.governor="move"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/agent</type>
        <text>Is given.</text>
        <conditions>
            <condition>nsubjpass.governor="give"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=agent.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_of</type>
        <text>Computes width.</text>
        <conditions>
            <condition>dobj.governor="compute"</condition>
            <condition>dobj.dependent="width"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
            <condition>prep_of.dependent="element"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To know [something].</text>
        <conditions>
            <condition>aux.governor="know"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj/aux</type>
        <text>[something] should have [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="should"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We add rectangle.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="rectangle"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/prep_above</type>
        <text>We add [something].</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_above.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>We add area.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="area"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in/nsubj</type>
        <text>We [verb].</text>
        <conditions>
            <condition>prep_in.governor="add"</condition>
            <condition>prep_in.dependent="step"</condition>
            <condition>prep_in.governor=nsubj.governor</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_of</type>
        <text>Contains instance.</text>
        <conditions>
            <condition>dobj.governor="contain"</condition>
            <condition>dobj.dependent="instance"</condition>
            <condition>dobj.dependent=prep_of.governor</condition>
            <condition>prep_of.dependent="famixstclass"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>This is achieved.</text>
        <conditions>
            <condition>nsubjpass.governor="achieve"</condition>
            <condition>nsubjpass.dependent="this"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] can extend [something].</text>
        <conditions>
            <condition>nsubj.governor="extend"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] adds edge.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="edge"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Iftrues [something].</text>
        <conditions>
            <condition>dobj.governor="iftrue"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] calls [something].</text>
        <conditions>
            <condition>nsubj.governor="name call"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] nds [something].</text>
        <conditions>
            <condition>nsubj.governor="cl nd"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_into/agent</type>
        <text/>
        <conditions>
            <condition>prep_into.governor="take"</condition>
            <condition>prep_into.dependent="account"</condition>
            <condition>prep_into.governor=agent.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] appear.</text>
        <conditions>
            <condition>nsubj.governor="appear"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp/nsubj</type>
        <text>[something] is to implement.</text>
        <conditions>
            <condition>xcomp.governor="be"</condition>
            <condition>xcomp.dependent="implement"</condition>
            <condition>xcomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>To give [something].</text>
        <conditions>
            <condition>dobj.governor="give"</condition>
            <condition>dobj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass/nsubjpass</type>
        <text>Is repeated.</text>
        <conditions>
            <condition>auxpass.governor="translate repeat"</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=nsubjpass.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>Step is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.dependent="step"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>To split [something].</text>
        <conditions>
            <condition>aux.governor="split"</condition>
            <condition>aux.dependent="to"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="sum"</condition>
            <condition>prep_of.dependent="descent"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>To use [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] does [something].</text>
        <conditions>
            <condition>nsubj.governor="do"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Builds [something].</text>
        <conditions>
            <condition>dobj.governor="build"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Gtgraphtreemaplayoutexample squarifywithsevennodes [something].</text>
        <conditions>
            <condition>nsubj.governor="squarifywithsevennode"</condition>
            <condition>nsubj.dependent="gtgraphtreemaplayoutexample"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>vmod</type>
        <text>[verb]s worstvalueround.</text>
        <conditions>
            <condition>vmod.governor="label"</condition>
            <condition>vmod.dependent="worstvalueround"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>We start.</text>
        <conditions>
            <condition>nsubj.governor="start"</condition>
            <condition>nsubj.dependent="we"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>To fill [something].</text>
        <conditions>
            <condition>dobj.governor="fill"</condition>
            <condition>dobj.governor=aux.governor</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is example.</text>
        <conditions>
            <condition>nsubj.governor="example"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Fills path.</text>
        <conditions>
            <condition>dobj.governor="fill"</condition>
            <condition>dobj.dependent="path"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Pngs [something].</text>
        <conditions>
            <condition>dobj.governor="png"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] gs [something].</text>
        <conditions>
            <condition>nsubj.governor="g"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_at</type>
        <text/>
        <conditions>
            <condition>prep_at.governor="dictionary"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is described.</text>
        <conditions>
            <condition>nsubjpass.governor="describe"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] [auxiliary] have [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for/nsubj</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="have"</condition>
            <condition>prep_for.dependent="example"</condition>
            <condition>prep_for.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_in/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=prep_in.governor</condition>
            <condition>prep_in.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_on</type>
        <text>Treilli mallattices.</text>
        <conditions>
            <condition>nsubj.governor="mallattice"</condition>
            <condition>nsubj.dependent="treilli"</condition>
            <condition>nsubj.governor=prep_on.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] gs [something].</text>
        <conditions>
            <condition>dobj.governor="g"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/nsubj</type>
        <text>[something] [auxiliary] use [something].</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>acomp</type>
        <text>Addmetrices.</text>
        <conditions>
            <condition>acomp.governor="addmetric"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To iterate.</text>
        <conditions>
            <condition>aux.governor="iterate"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] translate.</text>
        <conditions>
            <condition>aux.governor="iterate translate"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] shows [something].</text>
        <conditions>
            <condition>nsubj.governor="show"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Example shows.</text>
        <conditions>
            <condition>nsubj.governor="show"</condition>
            <condition>nsubj.dependent="example"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="middle"</condition>
            <condition>prep_of.dependent="edge"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Creates element.</text>
        <conditions>
            <condition>dobj.governor="create"</condition>
            <condition>dobj.dependent="element"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] computes [something].</text>
        <conditions>
            <condition>nsubj.governor="compute"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Is.</text>
        <conditions>
            <condition>xcomp.governor="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Paints [something].</text>
        <conditions>
            <condition>dobj.governor="implement paint"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.governor=prep.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] types.</text>
        <conditions>
            <condition>nsubj.governor="like type"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_with</type>
        <text>[something] starts.</text>
        <conditions>
            <condition>nsubj.governor="start"</condition>
            <condition>nsubj.governor=prep_with.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] shapes.</text>
        <conditions>
            <condition>nsubj.governor="shape"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sends method.</text>
        <conditions>
            <condition>dobj.governor="send"</condition>
            <condition>dobj.dependent="method"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="instance"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To inject.</text>
        <conditions>
            <condition>aux.governor="inject"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="middle"</condition>
            <condition>prep_of.dependent="topedge"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Splits line.</text>
        <conditions>
            <condition>dobj.governor="split"</condition>
            <condition>dobj.dependent="line"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>We need.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_for</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] send [something].</text>
        <conditions>
            <condition>aux.governor="send"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] shapes [something].</text>
        <conditions>
            <condition>nsubj.governor="shape"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is used.</text>
        <conditions>
            <condition>auxpass.governor="use"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Files [something].</text>
        <conditions>
            <condition>dobj.governor="file"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] files [something].</text>
        <conditions>
            <condition>nsubj.governor="file"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To initialize.</text>
        <conditions>
            <condition>aux.governor="initialize"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] previewexpands [something].</text>
        <conditions>
            <condition>nsubj.governor="previewexpand"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="rectangle"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>We choose.</text>
        <conditions>
            <condition>nsubj.governor="choose"</condition>
            <condition>nsubj.dependent="we"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] improve [something].</text>
        <conditions>
            <condition>aux.governor="improve"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] shows.</text>
        <conditions>
            <condition>nsubj.governor="show"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] smalltalks [something].</text>
        <conditions>
            <condition>dobj.governor="smalltalk"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] starts [something].</text>
        <conditions>
            <condition>nsubj.governor="begin start"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/vmod</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="apply use"</condition>
            <condition>dobj.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] cls [something].</text>
        <conditions>
            <condition>nsubj.governor="paint cl"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Anxdfile adocuments.</text>
        <conditions>
            <condition>nsubj.governor="adocument"</condition>
            <condition>nsubj.dependent="anxdfile"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] collects.</text>
        <conditions>
            <condition>nsubj.governor="collect"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] cls [something].</text>
        <conditions>
            <condition>nsubj.governor="name cl"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] calls [something].</text>
        <conditions>
            <condition>nsubj.governor="name call"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] puts [something].</text>
        <conditions>
            <condition>nsubj.governor="put"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="entity"</condition>
            <condition>prep_of.dependent="model"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_on</type>
        <text/>
        <conditions>
            <condition>prep_on.governor="mallatticepattern"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Model treillis.</text>
        <conditions>
            <condition>nsubj.governor="treilli"</condition>
            <condition>nsubj.dependent="model"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Extends [something].</text>
        <conditions>
            <condition>dobj.governor="extend"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_with</type>
        <text>[something] querylocals.</text>
        <conditions>
            <condition>nsubj.governor="querylocal"</condition>
            <condition>nsubj.governor=prep_with.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp/nsubj</type>
        <text>[something] ars.</text>
        <conditions>
            <condition>ccomp.governor="p ar"</condition>
            <condition>ccomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses it.</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.dependent="it"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] cls [something].</text>
        <conditions>
            <condition>dobj.governor="nd cl"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] meets [something].</text>
        <conditions>
            <condition>nsubj.governor="meet"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Rtellipses size.</text>
        <conditions>
            <condition>dobj.governor="rtellipse"</condition>
            <condition>dobj.dependent="size"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Comp adds.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.dependent="comp"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] adds.</text>
        <conditions>
            <condition>nsubj.governor="add"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Vs element.</text>
        <conditions>
            <condition>dobj.governor="v"</condition>
            <condition>dobj.dependent="element"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] numberofmethods [something].</text>
        <conditions>
            <condition>nsubj.governor="numberofmethod"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Interactions subclass.</text>
        <conditions>
            <condition>dobj.governor="interaction"</condition>
            <condition>dobj.dependent="subclass"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Contacts [something].</text>
        <conditions>
            <condition>dobj.governor="interaction contact"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] imports.</text>
        <conditions>
            <condition>nsubj.governor="export paint import"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Begins [something].</text>
        <conditions>
            <condition>dobj.governor="start begin"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] names.</text>
        <conditions>
            <condition>nsubj.governor="cl ar name"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="element"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Translates [something].</text>
        <conditions>
            <condition>dobj.governor="iterate translate"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Runs [something].</text>
        <conditions>
            <condition>dobj.governor="run"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="subclass"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Injects [something].</text>
        <conditions>
            <condition>dobj.governor="inject"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="section"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="text insert"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="property"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] middles.</text>
        <conditions>
            <condition>nsubj.governor="center middle"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Lets.</text>
        <conditions>
            <condition>ccomp.governor="let"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] allows.</text>
        <conditions>
            <condition>nsubj.governor="let allow"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] decreases.</text>
        <conditions>
            <condition>nsubj.governor="change decrease"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>ccomp</type>
        <text>Notes.</text>
        <conditions>
            <condition>ccomp.governor="note"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="define"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] creates.</text>
        <conditions>
            <condition>nsubj.governor="create"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] asfilereferences.</text>
        <conditions>
            <condition>nsubj.governor="asfilereference"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] builds.</text>
        <conditions>
            <condition>nsubj.governor="build"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Initializes [something].</text>
        <conditions>
            <condition>dobj.governor="initialize"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Executes [something].</text>
        <conditions>
            <condition>dobj.governor="execute"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>agent</type>
        <text/>
        <conditions>
            <condition>agent.governor="represent"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Installers [something].</text>
        <conditions>
            <condition>dobj.governor="installer"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Paints [something].</text>
        <conditions>
            <condition>dobj.governor="load paint"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] transforms.</text>
        <conditions>
            <condition>nsubj.governor="transform"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] place.</text>
        <conditions>
            <condition>aux.governor="place"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>xcomp.governor="use"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="fca"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] queryalls.</text>
        <conditions>
            <condition>nsubj.governor="queryall"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] queryalllocals.</text>
        <conditions>
            <condition>nsubj.governor="queryalllocal"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] cls.</text>
        <conditions>
            <condition>nsubj.governor="p cl"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] funblocks.</text>
        <conditions>
            <condition>nsubj.governor="funblock"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Meets [something].</text>
        <conditions>
            <condition>dobj.governor="meet"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] rtellipses.</text>
        <conditions>
            <condition>nsubj.governor="rtellipse"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Lineshapes.</text>
        <conditions>
            <condition>xcomp.governor="lineshape"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Lineshapes [something].</text>
        <conditions>
            <condition>dobj.governor="lineshape"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Edges [something].</text>
        <conditions>
            <condition>dobj.governor="edge"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] dictionaries.</text>
        <conditions>
            <condition>nsubj.governor="dictionary"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Ds [something].</text>
        <conditions>
            <condition>dobj.governor="d"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] vs.</text>
        <conditions>
            <condition>nsubj.governor="v"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] oks.</text>
        <conditions>
            <condition>nsubj.governor="ok"</condition>
        </conditions>
        <sentence_class>Example</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is sent.</text>
        <conditions>
            <condition>auxpass.governor="send"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Has.</text>
        <conditions>
            <condition>xcomp.governor="have"</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] has.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] must implement [something].</text>
        <conditions>
            <condition>nsubj.governor="implement"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="must"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is selected.</text>
        <conditions>
            <condition>nsubjpass.governor="choose select"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass</type>
        <text>[auxiliary] be executed.</text>
        <conditions>
            <condition>aux.governor="execute"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] set.</text>
        <conditions>
            <condition>aux.governor="set"</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Preconditions</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod/dobj</type>
        <text>I is resource [something] build.</text>
        <conditions>
            <condition>nsubj.governor="resource"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
            <condition>vmod.dependent="build"</condition>
            <condition>vmod.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To use.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>[something] is class.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>That allows user.</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.dependent="that"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.dependent="user"</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is used.</text>
        <conditions>
            <condition>auxpass.governor="use"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is sent.</text>
        <conditions>
            <condition>nsubjpass.governor="send"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Contains example.</text>
        <conditions>
            <condition>dobj.governor="contain"</condition>
            <condition>dobj.dependent="example"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] use [something].</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="example"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
        </conditions>
        <sentence_class>Classreferences</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Http wwws.</text>
        <conditions>
            <condition>nsubj.governor="www"</condition>
            <condition>nsubj.dependent="http"</condition>
        </conditions>
        <sentence_class>Links</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Pngs [something].</text>
        <conditions>
            <condition>dobj.governor="png"</condition>
        </conditions>
        <sentence_class>Links</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Orgs [something].</text>
        <conditions>
            <condition>dobj.governor="org"</condition>
        </conditions>
        <sentence_class>Links</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] https [something].</text>
        <conditions>
            <condition>nsubj.governor="http"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Links</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
        </conditions>
        <sentence_class>Links</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>[auxiliary] be found.</text>
        <conditions>
            <condition>nsubjpass.governor="find"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_for</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.governor=prep_for.governor</condition>
            <condition>prep_for.dependent="example"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Sees comment.</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.dependent="comment"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>Http wwws.</text>
        <conditions>
            <condition>nsubj.governor="www"</condition>
            <condition>nsubj.dependent="http"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_for</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.governor=prep_for.governor</condition>
            <condition>prep_for.dependent="detail"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] sees [something].</text>
        <conditions>
            <condition>nsubj.governor="see"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/prep_in</type>
        <text>Can find.</text>
        <conditions>
            <condition>aux.governor="find"</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=prep_in.governor</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/prep_for</type>
        <text>Sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.governor=prep_for.governor</condition>
            <condition>prep_for.dependent="usage use"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] sees [something].</text>
        <conditions>
            <condition>dobj.governor="see"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] https [something].</text>
        <conditions>
            <condition>nsubj.governor="http"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="comment"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] stds.</text>
        <conditions>
            <condition>nsubj.governor="ed std"</condition>
        </conditions>
        <sentence_class>ReferenceToOtherResources</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="set"</condition>
            <condition>prep_of.dependent="value"</condition>
        </conditions>
        <sentence_class>Observations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] takes.</text>
        <conditions>
            <condition>nsubj.governor="take"</condition>
        </conditions>
        <sentence_class>Observations</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/xcomp/nsubj</type>
        <text>[something] [auxiliary] be going.</text>
        <conditions>
            <condition>aux.governor="go"</condition>
            <condition>aux.dependent="be"</condition>
            <condition>aux.governor=xcomp.governor</condition>
            <condition>xcomp.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>Space starts [something].</text>
        <conditions>
            <condition>nsubj.governor="start"</condition>
            <condition>nsubj.dependent="space"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] states [something].</text>
        <conditions>
            <condition>nsubj.governor="tell state"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] points.</text>
        <conditions>
            <condition>nsubj.governor="point"</condition>
            <condition>nsubj.dependent=nsubj.governor</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] changes.</text>
        <conditions>
            <condition>nsubj.governor="change"</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] knows.</text>
        <conditions>
            <condition>nsubj.governor="know"</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_about</type>
        <text/>
        <conditions>
            <condition>prep_about.governor="sentence line"</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] supports.</text>
        <conditions>
            <condition>nsubj.governor="support"</condition>
        </conditions>
        <sentence_class>Todocomments</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/aux</type>
        <text>[auxiliary] use [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.dependent=dobj.governor</condition>
            <condition>dobj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/neg/auxpass</type>
        <text>[auxiliary] not be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
            <condition>neg.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/neg/auxpass</type>
        <text>Should not be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="should"</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>dobj.governor="have"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_as/nsubjpass/aux/neg/auxpass</type>
        <text>[auxiliary] not [verb].</text>
        <conditions>
            <condition>prep_as.governor="use"</condition>
            <condition>prep_as.governor=nsubjpass.governor</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/aux/auxpass</type>
        <text>Can be used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=aux.governor</condition>
            <condition>aux.dependent="can"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>[something] [auxiliary] use [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is class.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Can use.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj/prep_for</type>
        <text>[auxiliary] provide [something].</text>
        <conditions>
            <condition>aux.governor="provide"</condition>
            <condition>aux.governor=dobj.governor</condition>
            <condition>dobj.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass/nsubjpass</type>
        <text>[auxiliary] be used.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=nsubjpass.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/neg</type>
        <text>[something] [auxiliary] not trust.</text>
        <conditions>
            <condition>nsubj.governor="rely trust"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.governor=neg.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/neg</type>
        <text>[auxiliary] not rely.</text>
        <conditions>
            <condition>aux.governor="rely"</condition>
            <condition>aux.governor=neg.governor</condition>
            <condition>neg.dependent="not"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/neg</type>
        <text>Should not instantiate.</text>
        <conditions>
            <condition>aux.governor="instantiate"</condition>
            <condition>aux.dependent="should"</condition>
            <condition>aux.governor=neg.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>You have.</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.dependent="you"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux</type>
        <text>[something] [auxiliary] change.</text>
        <conditions>
            <condition>nsubj.governor="change"</condition>
            <condition>nsubj.governor=aux.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/ccomp</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=ccomp.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Can set.</text>
        <conditions>
            <condition>aux.governor="set"</condition>
            <condition>aux.dependent="can"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/dobj</type>
        <text>[auxiliary] specify [something].</text>
        <conditions>
            <condition>aux.governor="specify"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/neg</type>
        <text>[auxiliary] not rely.</text>
        <conditions>
            <condition>aux.governor="trust rely"</condition>
            <condition>aux.governor=neg.governor</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass</type>
        <text>Is implemented.</text>
        <conditions>
            <condition>auxpass.governor="implement"</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Takes [something].</text>
        <conditions>
            <condition>dobj.governor="take"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] do.</text>
        <conditions>
            <condition>aux.governor="do"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Does [something].</text>
        <conditions>
            <condition>dobj.governor="make do"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="instance case"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Needs.</text>
        <conditions>
            <condition>xcomp.governor="need"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Places [something].</text>
        <conditions>
            <condition>dobj.governor="set place"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] shapes.</text>
        <conditions>
            <condition>nsubj.governor="shape"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
        </conditions>
        <sentence_class>Warnings</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/vmod</type>
        <text>I uses [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=vmod.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/xcomp</type>
        <text>I is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.dependent="i"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Builds [something].</text>
        <conditions>
            <condition>dobj.governor="build"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop/vmod/dobj</type>
        <text>I is resource [something] build.</text>
        <conditions>
            <condition>nsubj.governor="resource"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
            <condition>cop.governor=vmod.governor</condition>
            <condition>vmod.dependent="build"</condition>
            <condition>vmod.dependent=dobj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="builder part"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/agent/xcomp</type>
        <text>I is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.dependent="i"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=agent.governor</condition>
            <condition>agent.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] provides [something].</text>
        <conditions>
            <condition>nsubj.governor="provide"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_to</type>
        <text>That is sent.</text>
        <conditions>
            <condition>nsubjpass.governor="send"</condition>
            <condition>nsubjpass.dependent="that"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/aux/dobj</type>
        <text>I will use [something].</text>
        <conditions>
            <condition>nsubj.governor="use"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=aux.governor</condition>
            <condition>aux.dependent="will"</condition>
            <condition>aux.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is iterator.</text>
        <conditions>
            <condition>nsubj.governor="iterator"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>xcomp</type>
        <text>Uses.</text>
        <conditions>
            <condition>xcomp.governor="use"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj/xcomp</type>
        <text>[something] allows [something].</text>
        <conditions>
            <condition>nsubj.governor="allow"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
            <condition>dobj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="implementation"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Contains [something].</text>
        <conditions>
            <condition>dobj.governor="contain"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/agent</type>
        <text>Is described.</text>
        <conditions>
            <condition>nsubjpass.governor="describe"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=agent.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] has [something].</text>
        <conditions>
            <condition>nsubj.governor="have"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass/prep_for</type>
        <text>Is used.</text>
        <conditions>
            <condition>nsubjpass.governor="use"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_for.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/cop</type>
        <text>I is class.</text>
        <conditions>
            <condition>nsubj.governor="class"</condition>
            <condition>nsubj.dependent="i"</condition>
            <condition>nsubj.governor=cop.governor</condition>
            <condition>cop.dependent="be"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] maintains [something].</text>
        <conditions>
            <condition>nsubj.governor="hold maintain"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubjpass/auxpass</type>
        <text>Is fired.</text>
        <conditions>
            <condition>nsubjpass.governor="fire"</condition>
            <condition>nsubjpass.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>auxpass/prep_to</type>
        <text>Is added.</text>
        <conditions>
            <condition>auxpass.governor="add"</condition>
            <condition>auxpass.dependent="be"</condition>
            <condition>auxpass.governor=prep_to.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_from</type>
        <text>That uses.</text>
        <conditions>
            <condition>nsubj.governor="apply use"</condition>
            <condition>nsubj.dependent="that"</condition>
            <condition>nsubj.governor=prep_from.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/auxpass</type>
        <text>[auxiliary] be used.</text>
        <conditions>
            <condition>aux.governor="use"</condition>
            <condition>aux.governor=auxpass.governor</condition>
            <condition>auxpass.dependent="be"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Tests [something].</text>
        <conditions>
            <condition>dobj.governor="test"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] catches [something].</text>
        <conditions>
            <condition>nsubj.governor="catch"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Defines [something].</text>
        <conditions>
            <condition>dobj.governor="define"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Includes [something].</text>
        <conditions>
            <condition>dobj.governor="include"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/prep_as</type>
        <text>[something] acts.</text>
        <conditions>
            <condition>nsubj.governor="act"</condition>
            <condition>nsubj.governor=prep_as.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="add"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/xcomp</type>
        <text>[something] needs.</text>
        <conditions>
            <condition>nsubj.governor="need"</condition>
            <condition>nsubj.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>To create.</text>
        <conditions>
            <condition>aux.governor="create"</condition>
            <condition>aux.dependent="to"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_for</type>
        <text/>
        <conditions>
            <condition>prep_for.governor="use"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj/nsubj</type>
        <text>[something] uses [something].</text>
        <conditions>
            <condition>dobj.governor="use"</condition>
            <condition>dobj.governor=nsubj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj/dobj</type>
        <text>[something] represents [something].</text>
        <conditions>
            <condition>nsubj.governor="represent"</condition>
            <condition>nsubj.governor=dobj.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux/xcomp</type>
        <text>[auxiliary] send.</text>
        <conditions>
            <condition>aux.governor="send"</condition>
            <condition>aux.governor=xcomp.governor</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>Will send.</text>
        <conditions>
            <condition>aux.governor="send"</condition>
            <condition>aux.dependent="will"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_by</type>
        <text/>
        <conditions>
            <condition>prep_by.governor="send"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] listens.</text>
        <conditions>
            <condition>nsubj.governor="listen"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] sends.</text>
        <conditions>
            <condition>nsubj.governor="send"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="attach"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_to</type>
        <text/>
        <conditions>
            <condition>prep_to.governor="use apply"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_between</type>
        <text/>
        <conditions>
            <condition>prep_between.governor="difference"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_with</type>
        <text/>
        <conditions>
            <condition>prep_with.governor="work"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] is.</text>
        <conditions>
            <condition>nsubj.governor="be"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="text"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] wants.</text>
        <conditions>
            <condition>nsubj.governor="want"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_in</type>
        <text/>
        <conditions>
            <condition>prep_in.governor="display"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>prep_of</type>
        <text/>
        <conditions>
            <condition>prep_of.governor="kind type"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>nsubj</type>
        <text>[something] subclasses.</text>
        <conditions>
            <condition>nsubj.governor="subclass"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>aux</type>
        <text>[auxiliary] flush.</text>
        <conditions>
            <condition>aux.governor="flush"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
    <NLP_heuristic>
        <sentence type="declarative"/>
        <type>dobj</type>
        <text>Accesses [something].</text>
        <conditions>
            <condition>dobj.governor="access"</condition>
        </conditions>
        <sentence_class>Collaborators</sentence_class>
    </NLP_heuristic>
</heuristics>